version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers
    working_directory: ~/studire
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/studire

  bundle_dependencies:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers
    working_directory: ~/studire
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-bundle-{{ checksum "Gemfile.lock" }}
            - v1-bundle
      - run: bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/studire/vendor/bundle

  test:
    docker:
      - image: circleci/ruby:2.6.2-node-browsers
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: "postgres"
          DB_PASSWORD: ""
      - image: circleci/postgres:11.2
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: studire_test
    working_directory: ~/studire
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-bundle-{{ checksum "Gemfile.lock" }}
      - run: rm ./config/database.yml
      - run: mv ./config/database.yml.org ./config/database.yml
      - run: bundle --path vendor/bundle
      - run: bundle exec rake db:create RAILS_ENV=test
      - run: bundle exec rake db:schema:load
      - run:
          name: Run tests
          command: bundle exec rspec

  deploy:
    docker:
      - image: circleci/python
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: install aws
          command: |
            sudo pip install awscli
            aws --version
      - run:
          name: Install ecs-deploy
          command: |
            curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
            sudo chmod +x /usr/bin/ecs-deploy
      - run:
          name: Install jq
          command: sudo apt-get install -y jq
      - run:
          name: "Log in to AWS ECR"
          command: eval $(aws ecr get-login --no-include-email --region ap-northeast-1)
      - run:
          name: "Build & Push Docker Image"
          command: |
            docker build -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/studire_web:latest -t $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/studire_web:$CIRCLE_SHA1 -f Dockerfile.prod --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY .
            docker push $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/studire_web:$CIRCLE_SHA1

      - run:
          name: "DB Migrate"
          command: |
            aws ecs run-task \
              --region ap-northeast-1 \
              --cluster stu-cluster \
              --task-definition stu-task \
              --overrides file://ecs/run_task_db_migrate.json
      - run:
          name: "Sevice deploy"
          environment:
          command: |
            ecs-deploy --cluster stu-cluster --service_name studire \
              --region ap-northeast-1 --timeout 240 \
              --image $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com/studire_web:$CIRCLE_SHA1

workflows:
  version: 2
  build_and_test_and_deploy:
    jobs:
      - checkout_code
      - bundle_dependencies:
          requires:
            - checkout_code
      - test:
          requires:
            - bundle_dependencies
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
